name: Deploy
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Docker build and restart on digital ocean
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: 22
        script: |
          cd ${{ secrets.FRONTEND_APP_DIRECTORY }}
          git pull
          docker build -t telegram-wishlist-frontend .
  staging-deploy:
    name: Staging Deploy
    runs-on: ubuntu-latest
    environment: staging
    needs: [build]
    steps:
    - name: Docker build and restart on digital ocean
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: 22
        script: |
          docker rm -f telegram-wishlist-frontend-staging
          docker run -d --name=telegram-wishlist-frontend-staging --init --restart=always -p 3002:3000 \
          -e BACKEND_HOST="${{ secrets.BACKEND_HOST }}" \
          -e TG_MINIAPP_URL="${{ secrets.TG_MINIAPP_URL }}" \
          telegram-wishlist-frontend
  production-deploy:
    name: Production Deploy
    runs-on: ubuntu-latest
    environment: production
    needs: [build]
    steps:
    - name: Docker build and restart on digital ocean
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: 22
        script: |
          echo "${{ secrets.BACKEND_HOST }}"
          echo "${{ secrets.TG_MINIAPP_URL }}"
